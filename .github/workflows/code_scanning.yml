name: 'Entur/Security/Code Scanning'

on:
    workflow_call:
        
jobs:
    get-repository-languages:
        runs-on: ubuntu-latest
        outputs: 
            repository_languages: ${{ env.GHA_SECURITY_CODE-SCANNING_REPOSITORY_LANGUAGES }} 
        steps:
            - id: get-repository-languages
              run: |
                  #TODO: maybe at some point it will be possible to ask `gh codeql` for a list of supported languages
                  languages="$(gh api /repos/${{ github.repository }}/languages | \
                    jq 'keys 
                        | .[] as $langs
                        | {
                            "C":"c-cpp",
                            "C++":"c-cpp",
                            "C#":"csharp",
                            "Go":"go",
                            "Java":"java-kotlin",
                            "JavaScript":"javascript-typescript",
                            "TypeScript":"javascript-typescript",
                            "Kotlin":"java-kotlin",
                            "Python":"python",
                            "Ruby":"ruby",
                            "Swift":"swift"
                          } as $supported 
                        | $langs         # operate on all the languages
                        | $supported[.]  # and lookup their values, null if not found
                        | select(.)      # select removes null values
                    ' | \
                    jq --slurp --compact-output 'unique')" # make a oneliner, and remove duplicates
            
                  echo 'GHA_SECURITY_CODE-SCANNING_REPOSITORY_LANGUAGES='$languages >> $GITHUB_ENV
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    codeql-analysis:
        runs-on: ubuntu-latest
        needs: get-repository-languages
        permissions:
            # required for all workflows
            security-events: write
            # only required for workflows in private repositories
            actions: read
            contents: read
        strategy:
            fail-fast: false
            matrix:
                language: ${{fromJson(needs.get-repository-languages.outputs.repository_languages)}}
        steps:
            - name: "Checkout repository"
              uses: actions/checkout@v4
            - name: "Initialize CodeQL"
              uses: github/codeql-action/init@v3
              with:
                languages: ${{ matrix.language }}
                build-mode: ${{ matrix.language == 'java-kotlin' && 'none' }}
            - name: "Perform CodeQL Analysis"
              uses: github/codeql-action/analyze@v3
              with:
                category: "/language:${{ matrix.language }}"
