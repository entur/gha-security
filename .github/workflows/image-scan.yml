name: 'Entur/Security/Image Scan'

on:
    workflow_call:
        inputs:
            image_artifact:
                description: 'Image artifact to scan'
                type: string
                required: true
            image_whitelist_file:
                description: 'Whitelisting file for image scanning alerts'
                type: string
                required: false

jobs:
    image-scan:
        runs-on: ubuntu-latest
        permissions:
            contents: write # required for checking out the repository and creating files
            issues: write # required for creating issues, and/or adding issue comments
            pull-requests: write # required for creating comments on pull requests
            security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
            actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
        steps:
        - name: "Checkout repository"
          uses: actions/checkout@v4
        - name: "Download the image artifact"
          uses: actions/download-artifact@v4
          with:
            name: ${{ inputs.image_artifact }}
        - name: "Create image whitelist schema file"
          if: ${{ inputs.image_whitelist_file != '' }}
          run: |
            cat > image_whitelist_schema.yaml << EOF
            Image whitelisting:
              required: true
              type: list
              schema:
                type: dict
                schema:
                  cve:
                    required: true
                    type: string
                  comment:
                    required: true
                    type: string
                  reason:
                    required: true
                    type: string
            EOF
            echo 'GHA_SECURITY_CODE_SCANNING_IMAGE_WHITELIST_SCHEMA=image_whitelist_schema.yaml' >> $GITHUB_ENV
        - name: "Validate image whitelist file against schema"
          if: ${{ inputs.image_whitelist_file != '' }}
          uses: navikt/yaml-validator@3ab9bb9633648423b1287ec5e55b7f6c6412e074
          with: 
            schema_path: ${{ env.GHA_SECURITY_CODE_SCANNING_IMAGE_WHITELIST_SCHEMA }}
            document_path: ${{ inputs.image_whitelist_file }}
        - name: Convert image whitelist content to base64
          if: ${{ inputs.image_whitelist_file != '' }}
          run: |
            python -c "
            import yaml
            import base64
            import os 
            with open(os.getenv('GHA_SECURITY_CODE_SCANNING_IMAGE_WHITELIST_FILE'), 'r') as f:
                image_whitelisting = yaml.load(f, Loader=yaml.SafeLoader)
           
            grype_whitelisting = {'ignore': [{'vulnerability': dismissal['cve']} for dismissal in image_whitelisting['Image whitelisting']]}
            grype_whitelisting_yaml = yaml.dump(grype_whitelisting)
            grype_whitelisting_base64 = base64.b64encode(grype_whitelisting_yaml.encode()).decode()
            env_file = os.getenv('GITHUB_ENV')
            with open(env_file, 'a') as f:
                f.write('GHA_SECURITY_CODE_SCANNING_IMAGE_WHITELISTING_BASE64={}'.format(grype_whitelisting_base64))
            "
          env: 
            GHA_SECURITY_CODE_SCANNING_IMAGE_WHITELIST_FILE: ${{ inputs.image_whitelist_file }}
        - name:  "Check if grype.yaml exists"
          if: ${{ inputs.image_whitelist_file != '' }}
          run: |
            if test -f grype.yaml; then
              echo 'GHA_SECURITY_CODE_SCANNING_GRYPE_YAML_EXISTS=true' >> $GITHUB_ENV
            else
              echo 'GHA_SECURITY_CODE_SCANNING_GRYPE_YAML_EXISTS=false' >> $GITHUB_ENV
            fi
        - name: "Create grype.yaml"
          if: env.GHA_SECURITY_CODE_SCANNING_GRYPE_YAML_EXISTS == 'false' && inputs.image_whitelist_file != ''
          run: |
            gh api \
              --method PUT \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              /repos/${{ github.repository }}/contents/grype.yaml \
              -f "message=Create grype.yaml" -f "content=${{ env.whitelist_content }}"
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            whitelist_content: ${{ env.GHA_SECURITY_CODE_SCANNING_IMAGE_WHITELISTING_BASE64 }}
        - name: "Update grype.yaml"
          if: env.GHA_SECURITY_CODE_SCANNING_GRYPE_YAML_EXISTS == 'true' && inputs.image_whitelist_file != ''
          run: |
            grype_file="$(gh api \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              /repos/${{ github.repository }}/contents/grype.yaml)"
            grype_file_sha=$(echo "$grype_file" | jq -r '.sha')
            gh api \
              --method PUT \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              /repos/${{ github.repository }}/contents/grype.yaml \
              -f "message=Update grype.yaml" -f "content=${{ env.whitelist_content }}" \
              -f "sha=$grype_file_sha"
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            whitelist_content: ${{ env.GHA_SECURITY_CODE_SCANNING_IMAGE_WHITELISTING_BASE64 }}
        - name: "Anchore Grype Scan"
          id: anchore-scan
          uses: anchore/scan-action@v3
          with: 
            image: ${{ inputs.image_artifact }}.tar
            fail-build: true
            severity-cutoff: critical
            by-cve: true
        - name: "Upload vulnerability report"
          id: upload-vulnerability-report
          if: ${{ !cancelled() }}
          uses: github/codeql-action/upload-sarif@v3
          with: 
            sarif_file: ${{ steps.anchore-scan.outputs.sarif }}
            category: 'anchore-grype-scan'
        - name: "Create comment on pull request if critical vulnerabilities found"
          if: always() && (steps.anchore-scan.outcome == 'failure') && (steps.upload-vulnerability-report == 'success')
          run: |
            PR_NUMBER=${{ github.event.pull_request.number }}
            REPOSITORY=${{ github.repository }}
            gh api /repos/$REPOSITORY/issues/$PR_NUMBER/comments \
                -H "Accept: application/vnd.github.v3+json" \
                --field "body=:no_entry: :no_entry: :no_entry: :no_entry: :no_entry: :no_entry: :no_entry: :no_entry: :no_entry: :no_entry: :no_entry: :no_entry: :no_entry: :no_entry: 
                Anchore Grype scan found critical vulnerabilities in the image artifact. Please address these vulnerabilities.
                The scan results can be found [here](https://github.com/$REPOSITORY/security/code-scanning?query=is%3Aopen+pr%3A$PR_NUMBER)
                :no_entry: :no_entry: :no_entry: :no_entry: :no_entry: :no_entry: :no_entry: :no_entry: :no_entry: :no_entry: :no_entry: :no_entry: :no_entry: :no_entry:"
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
