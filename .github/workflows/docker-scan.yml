name: 'Entur/Security/Docker Scan'

on:
  workflow_call:
    inputs:
      image_artifact:
        description: 'Image artifact to scan'
        type: string
        required: true
    secrets:
      external_repository_token:
        description: 'Token to access the external repository mentioned in the dockerscan.yml file. Must have read access to the repository.'
        required: false

env:
  GHA_SECURITY_DOCKER_SCAN_IMAGE_ARTIFACT: ${{ inputs.image_artifact }}
  GITHUB_REPOSITORY: ${{ github.repository }}

jobs:
  docker-scan:
    # See https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/customizing-your-advanced-setup-for-code-scanning#scanning-on-push
    # If we found a language, and the event is not a push made by dependabot on a PR
    if: ${{ github.event != 'push' || (github.event == 'push' && github.actor != 'dependabot[bot]') }}
    runs-on: ubuntu-24.04
    permissions:
      contents: write # required for checking out the repository and creating files
      issues: write # required for creating issues, and/or adding issue comments
      pull-requests: write # required for creating comments on pull requests
      security-events: write # required for uploading SARIF file to GitHub 
      actions: read #required for uploading SARIF file to GitHub (workflows in private repositories)
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: Scanner Action
        uses: entur/gha-security/scanner-action@feature/SIK-1485
        with:
          scanner: 'dockerscan'
          token: ${{ secrets.GITHUB_TOKEN }}
          external-repository-token: ${{ secrets.external_repository_token }}

      - name: "Anchore Grype Scan"
        id: anchore-scan
        uses: anchore/scan-action@v6
        with: 
          image: ${{ inputs.image_artifact }}.tar
          by-cve: true
          fail-build: false
          severity-cutoff: critical

      - name: "Upload vulnerability report"
        id: upload-vulnerability-report
        uses: github/codeql-action/upload-sarif@v3
        with: 
          sarif_file: ${{ steps.anchore-scan.outputs.sarif }}
          category: 'anchore-grype-scan'
  check-for-critical-alerts:
    runs-on: ubuntu-24.04
    if: ${{ always() }}
    needs: [docker-scan]
    permissions: 
      security-events: read # required to read code scan alerts
      issues: write # required for creating issues, and/or adding issue comments
      pull-requests: write # required for creating comments on pull requests
    steps: 
      - name: "Get critical docker scan alerts"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set +e # Do not exit if a command fails
          alerts="$(gh api \
            --method GET \
            -H 'Accept: application/vnd.github+json' \
            -H 'X-GitHub-Api-Version: 2022-11-28' \
            /repos/${GITHUB_REPOSITORY}/code-scanning/alerts \
            -F severity='critical' -F state='open' -F ref='${{ github.ref }}' -F per_page='100' -F tool_name='Grype' --paginate)"
            
          if [ $? != 0 ]; then
            echo "Failed to get alerts from Github. The previous upload vulnerability report step might have failed to be processed/uploaded. Try running the job again"
            echo '## Docker Scan - Failed to get alerts.
            Upload vulnerability report step might have failed to be processed/uploaded.
            Try running the job again' >> $GITHUB_STEP_SUMMARY
            exit 1
          else
            if [ "$alerts" == "[]" ]; then
              echo 'GHA_SECURITY_DOCKER_SCAN_CREATE_ALERT_COMMENT='False >> $GITHUB_ENV
            else
              echo 'GHA_SECURITY_DOCKER_SCAN_CREATE_ALERT_COMMENT='True >> $GITHUB_ENV
            fi
          fi
      - name: "Print to job summary if critical alerts are found"
        if: ${{ env.GHA_SECURITY_DOCKER_SCAN_CREATE_ALERT_COMMENT == 'True' }}
        env:
          REPOSITORY: ${{ github.repository }}
          GIT_REF: ${{ github.ref }}
        run: |
          echo '## ⛔ Docker Image Scan - Critical Vulnerabilities ⛔
          **Docker Image scan found critical vulnerabilities in the image artifact that needs to be addressed.**
          ### Results
          The scan results can be found [here](https://github.com/'"$REPOSITORY"'/security/code-scanning?query=is%3Aopen+ref%3A'"$GIT_REF"')
          ### Allowlist
          Use the allowlist if you want to ignore vulnerabilities that do not affect the repository.  
          See the [Docker Scan documentation](https://github.com/entur/gha-security/blob/main/README-docker-scan.md#allowlisting-vulnerabilities) on how to use allowlist.' >> $GITHUB_STEP_SUMMARY
      - name: "Create comment on pull request if critical alerts are found"
        if: ${{ env.GHA_SECURITY_DOCKER_SCAN_CREATE_ALERT_COMMENT == 'True' && github.event.name == 'pull_request' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --repo $GITHUB_REPOSITORY -b "## ⛔ Docker Image Scan - Critical Vulnerabilities ⛔
          **Docker Image scan found critical vulnerabilities in the image artifact that needs to be addressed.**
          ### Results
          The scan results can be found [here](https://github.com/${GITHUB_REPOSITORY}/security/code-scanning?query=is%3Aopen+pr%3A${{ github.event.pull_request.number }})
          ### Allowlist
          Use the allowlist if you want to ignore vulnerabilities that do not affect the repository.  
          See the [Docker Scan documentation](https://github.com/entur/gha-security/blob/main/README-docker-scan.md#allowlisting-vulnerabilities) on how to use allowlist."