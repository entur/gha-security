name: 'Entur/Security/Docker Scan'

on:
  workflow_call:
    inputs:
      image_artifact:
        description: 'Image artifact to scan'
        type: string
        required: true
    secrets:
      external_repository_token:
        description: 'Token to access the external repository mentioned in the dockerscan.yml file. Must have read access to the repository.'
        required: false
      GHA_SECURITY_CENTRAL_ALLOWLIST:
        description: 'SSH keys to checkout the central allowlist repository. Secret is fetched from Entur GitHub organization if secrets are inherited.'
        required: false
      SLACK_BOT_TOKEN:
        description: 'Slack bot token is used for notifications. Secret is fetched from Entur GitHub organization if secrets are inherited.'
        required: false

env:
  GHA_SECURITY_DOCKER_SCAN_IMAGE_ARTIFACT: ${{ inputs.image_artifact }}
  GITHUB_REPOSITORY: ${{ github.repository }}
  GIT_REF: ${{ github.ref }}

jobs:
  docker-scan:
    # See https://docs.github.com/en/code-security/code-scanning/creating-an-advanced-setup-for-code-scanning/customizing-your-advanced-setup-for-code-scanning#scanning-on-push
    # If we found a language, and the event is not a push made by dependabot on a PR
    if: ${{ github.event_name != 'push' || (github.event_name == 'push' && github.actor != 'dependabot[bot]') }}
    runs-on: ubuntu-24.04
    permissions:
      contents: write # required for checking out the repository and creating files
      issues: write # required for creating issues, and/or adding issue comments
      pull-requests: write # required for creating comments on pull requests
      security-events: write # required for uploading SARIF file to GitHub 
      actions: read #required for uploading SARIF file to GitHub (workflows in private repositories)
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: "Checkout central allowlist repository"
        if: env.CENTRAL_ALLOWLIST_SSH_KEY
        uses: actions/checkout@v5
        with:
          repository: entur/central-allowlist
          ref: main
          path: central-allowlist
          ssh-key: ${{ secrets.GHA_SECURITY_CENTRAL_ALLOWLIST }}
        env: 
          CENTRAL_ALLOWLIST_SSH_KEY: ${{ secrets.GHA_SECURITY_CENTRAL_ALLOWLIST }}

      - name: "Write to workflow job summary if central allowlist is not used"
        if: env.CENTRAL_ALLOWLIST_SSH_KEY == ''
        run: |
          echo "## ⚠️ Central Allowlist not used ⚠️
          The central allowlist is not being used in this workflow run.  
          To use it, add 'secrets: inherit' to your workflow call.
          See the [Docker Scan documentation](https://github.com/entur/gha-security/blob/main/README-docker-scan.md) for more information." >> "$GITHUB_STEP_SUMMARY"
        env: 
          CENTRAL_ALLOWLIST_SSH_KEY: ${{ secrets.GHA_SECURITY_CENTRAL_ALLOWLIST }}

      - name: "Download the image artifact"
        uses: actions/download-artifact@v5
        with:
          name: ${{ env.GHA_SECURITY_DOCKER_SCAN_IMAGE_ARTIFACT }}

      - name: Scanner Action
        id: scanner-action
        uses: entur/gha-security/scanner-action@v2
        with:
          scanner: 'dockerscan'
          token: ${{ secrets.GITHUB_TOKEN }}
          external-repository-token: ${{ secrets.external_repository_token }}

      - name: "Send pull request notification"
        if: ${{ github.event_name == 'pull_request' && steps.scanner-action.outputs.notification_pull_request_enabled == 'True' && steps.scanner-action.outputs.notification_severity_alert_found == 'True' }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          NOTIFICATION_MARKDOWN: ${{ steps.scanner-action.outputs.notification_markdown }}
        run: |
          gh pr comment "$PR_NUMBER" --repo "$GITHUB_REPOSITORY" -b "$NOTIFICATION_MARKDOWN"

      - name: "Send job summary notification"
        if: ${{ steps.scanner-action.outputs.notification_severity_alert_found == 'True' }}
        env:
          NOTIFICATION_MARKDOWN: ${{ steps.scanner-action.outputs.notification_markdown }}
        run: |
          echo "$NOTIFICATION_MARKDOWN" >> "$GITHUB_STEP_SUMMARY"

      # Taken from https://github.com/entur/gha-slack/blob/main/.github/workflows/post.yml
      - name: "Send slack notification"
        if: ${{ steps.scanner-action.outputs.notification_slack_enabled == 'True' && steps.scanner-action.outputs.notification_severity_alert_found == 'True' }}
        uses: slackapi/slack-github-action@fcfb566f8b0aab22203f066d80ca1d7e4b5d05b3 # v1.27.1
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          NOTIFICATION_SLACK_POST_BLOCKS: ${{ steps.scanner-action.outputs.notification_slack_block }}
        with:
          channel-id: ${{ steps.scanner-action.outputs.notification_slack_channel_id }}
          payload: |
            ${{ env.NOTIFICATION_SLACK_POST_BLOCKS }}

      - name: "Docker workdir extraction"
        id: docker-workdir
        env:
          IMAGE_ARTIFACT: ${{ inputs.image_artifact }}
        run: |
          IMAGE=$(docker load -i "$IMAGE_ARTIFACT".tar | sed 's/Loaded image: //')
          WORKDIR=$( docker inspect -f "{{.Config.WorkingDir}}" "$IMAGE" )
          if [[ "$WORKDIR" != "/" && "$WORKDIR" != "" ]]; then
            echo "DOCKER_WORKDIR=$WORKDIR" >> "$GITHUB_ENV"
          else
            echo "::warning ::Setting WORKDIR to /app (or similar) and running the application from there is highly recommended."
          fi
      - name: "Anchore Syft Scan"
        id: syft-scan
        uses: anchore/sbom-action@f8bdd1d8ac5e901a77a92f111440fdb1b593736b # v0
        env:
          SYFT_EXCLUDE: ${{ env.DOCKER_WORKDIR }}
        with:
          format: spdx-json
          image: ${{ inputs.image_artifact }}.tar
          output-file: ${{ inputs.image_artifact }}.spdx.json
          artifact-name: ${{ inputs.image_artifact }}.spdx.json
          dependency-snapshot: ${{ github.ref_name == github.event.repository.default_branch }}
        
      - name: "Anchore Grype Scan"
        id: anchore-scan
        uses: anchore/scan-action@a5605eb0943e46279cb4fbd9d44297355d3520ab # v7
        with: 
          sbom: ${{ inputs.image_artifact }}.spdx.json
          by-cve: true
          fail-build: false
          severity-cutoff: critical

      - name: "Upload vulnerability report"
        id: upload-vulnerability-report
        uses: github/codeql-action/upload-sarif@v4
        with: 
          sarif_file: ${{ steps.anchore-scan.outputs.sarif }}
          category: 'anchore-grype-scan'
